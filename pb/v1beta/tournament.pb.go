// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tournament.proto

package v1beta

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Team struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}
func (*Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_f8100330c878e787, []int{0}
}
func (m *Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Team.Unmarshal(m, b)
}
func (m *Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Team.Marshal(b, m, deterministic)
}
func (dst *Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Team.Merge(dst, src)
}
func (m *Team) XXX_Size() int {
	return xxx_messageInfo_Team.Size(m)
}
func (m *Team) XXX_DiscardUnknown() {
	xxx_messageInfo_Team.DiscardUnknown(m)
}

var xxx_messageInfo_Team proto.InternalMessageInfo

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Group struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Team                 []*Team  `protobuf:"bytes,3,rep,name=team,proto3" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_f8100330c878e787, []int{1}
}
func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (dst *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(dst, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Group) GetTeam() []*Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type Round struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	First                *Team    `protobuf:"bytes,2,opt,name=first,proto3" json:"first,omitempty"`
	Second               *Team    `protobuf:"bytes,3,opt,name=second,proto3" json:"second,omitempty"`
	Score                string   `protobuf:"bytes,4,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Round) Reset()         { *m = Round{} }
func (m *Round) String() string { return proto.CompactTextString(m) }
func (*Round) ProtoMessage()    {}
func (*Round) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_f8100330c878e787, []int{2}
}
func (m *Round) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Round.Unmarshal(m, b)
}
func (m *Round) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Round.Marshal(b, m, deterministic)
}
func (dst *Round) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Round.Merge(dst, src)
}
func (m *Round) XXX_Size() int {
	return xxx_messageInfo_Round.Size(m)
}
func (m *Round) XXX_DiscardUnknown() {
	xxx_messageInfo_Round.DiscardUnknown(m)
}

var xxx_messageInfo_Round proto.InternalMessageInfo

func (m *Round) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Round) GetFirst() *Team {
	if m != nil {
		return m.First
	}
	return nil
}

func (m *Round) GetSecond() *Team {
	if m != nil {
		return m.Second
	}
	return nil
}

func (m *Round) GetScore() string {
	if m != nil {
		return m.Score
	}
	return ""
}

// Tournament define a pelota league
type Tournament struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Groups               map[string]*Group `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Rounds               []*Round          `protobuf:"bytes,3,rep,name=rounds,proto3" json:"rounds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Tournament) Reset()         { *m = Tournament{} }
func (m *Tournament) String() string { return proto.CompactTextString(m) }
func (*Tournament) ProtoMessage()    {}
func (*Tournament) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_f8100330c878e787, []int{3}
}
func (m *Tournament) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tournament.Unmarshal(m, b)
}
func (m *Tournament) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tournament.Marshal(b, m, deterministic)
}
func (dst *Tournament) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tournament.Merge(dst, src)
}
func (m *Tournament) XXX_Size() int {
	return xxx_messageInfo_Tournament.Size(m)
}
func (m *Tournament) XXX_DiscardUnknown() {
	xxx_messageInfo_Tournament.DiscardUnknown(m)
}

var xxx_messageInfo_Tournament proto.InternalMessageInfo

func (m *Tournament) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tournament) GetGroups() map[string]*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Tournament) GetRounds() []*Round {
	if m != nil {
		return m.Rounds
	}
	return nil
}

type GetTournamentsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTournamentsRequest) Reset()         { *m = GetTournamentsRequest{} }
func (m *GetTournamentsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTournamentsRequest) ProtoMessage()    {}
func (*GetTournamentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_f8100330c878e787, []int{4}
}
func (m *GetTournamentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTournamentsRequest.Unmarshal(m, b)
}
func (m *GetTournamentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTournamentsRequest.Marshal(b, m, deterministic)
}
func (dst *GetTournamentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTournamentsRequest.Merge(dst, src)
}
func (m *GetTournamentsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTournamentsRequest.Size(m)
}
func (m *GetTournamentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTournamentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTournamentsRequest proto.InternalMessageInfo

type GetTournamentsResponse struct {
	Tournaments          []*Tournament `protobuf:"bytes,1,rep,name=tournaments,proto3" json:"tournaments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetTournamentsResponse) Reset()         { *m = GetTournamentsResponse{} }
func (m *GetTournamentsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTournamentsResponse) ProtoMessage()    {}
func (*GetTournamentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_f8100330c878e787, []int{5}
}
func (m *GetTournamentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTournamentsResponse.Unmarshal(m, b)
}
func (m *GetTournamentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTournamentsResponse.Marshal(b, m, deterministic)
}
func (dst *GetTournamentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTournamentsResponse.Merge(dst, src)
}
func (m *GetTournamentsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTournamentsResponse.Size(m)
}
func (m *GetTournamentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTournamentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTournamentsResponse proto.InternalMessageInfo

func (m *GetTournamentsResponse) GetTournaments() []*Tournament {
	if m != nil {
		return m.Tournaments
	}
	return nil
}

type GetTournamentRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTournamentRequest) Reset()         { *m = GetTournamentRequest{} }
func (m *GetTournamentRequest) String() string { return proto.CompactTextString(m) }
func (*GetTournamentRequest) ProtoMessage()    {}
func (*GetTournamentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_f8100330c878e787, []int{6}
}
func (m *GetTournamentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTournamentRequest.Unmarshal(m, b)
}
func (m *GetTournamentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTournamentRequest.Marshal(b, m, deterministic)
}
func (dst *GetTournamentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTournamentRequest.Merge(dst, src)
}
func (m *GetTournamentRequest) XXX_Size() int {
	return xxx_messageInfo_GetTournamentRequest.Size(m)
}
func (m *GetTournamentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTournamentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTournamentRequest proto.InternalMessageInfo

func (m *GetTournamentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetTournamentResponse struct {
	Tournament           *Tournament `protobuf:"bytes,1,opt,name=tournament,proto3" json:"tournament,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetTournamentResponse) Reset()         { *m = GetTournamentResponse{} }
func (m *GetTournamentResponse) String() string { return proto.CompactTextString(m) }
func (*GetTournamentResponse) ProtoMessage()    {}
func (*GetTournamentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_f8100330c878e787, []int{7}
}
func (m *GetTournamentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTournamentResponse.Unmarshal(m, b)
}
func (m *GetTournamentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTournamentResponse.Marshal(b, m, deterministic)
}
func (dst *GetTournamentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTournamentResponse.Merge(dst, src)
}
func (m *GetTournamentResponse) XXX_Size() int {
	return xxx_messageInfo_GetTournamentResponse.Size(m)
}
func (m *GetTournamentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTournamentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTournamentResponse proto.InternalMessageInfo

func (m *GetTournamentResponse) GetTournament() *Tournament {
	if m != nil {
		return m.Tournament
	}
	return nil
}

type CreateTournamentRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Groups               []*Group `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTournamentRequest) Reset()         { *m = CreateTournamentRequest{} }
func (m *CreateTournamentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTournamentRequest) ProtoMessage()    {}
func (*CreateTournamentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_f8100330c878e787, []int{8}
}
func (m *CreateTournamentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTournamentRequest.Unmarshal(m, b)
}
func (m *CreateTournamentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTournamentRequest.Marshal(b, m, deterministic)
}
func (dst *CreateTournamentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTournamentRequest.Merge(dst, src)
}
func (m *CreateTournamentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTournamentRequest.Size(m)
}
func (m *CreateTournamentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTournamentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTournamentRequest proto.InternalMessageInfo

func (m *CreateTournamentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateTournamentRequest) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

type CreateTournamentResponse struct {
	Tournament           *Tournament `protobuf:"bytes,1,opt,name=tournament,proto3" json:"tournament,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateTournamentResponse) Reset()         { *m = CreateTournamentResponse{} }
func (m *CreateTournamentResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTournamentResponse) ProtoMessage()    {}
func (*CreateTournamentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_f8100330c878e787, []int{9}
}
func (m *CreateTournamentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTournamentResponse.Unmarshal(m, b)
}
func (m *CreateTournamentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTournamentResponse.Marshal(b, m, deterministic)
}
func (dst *CreateTournamentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTournamentResponse.Merge(dst, src)
}
func (m *CreateTournamentResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTournamentResponse.Size(m)
}
func (m *CreateTournamentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTournamentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTournamentResponse proto.InternalMessageInfo

func (m *CreateTournamentResponse) GetTournament() *Tournament {
	if m != nil {
		return m.Tournament
	}
	return nil
}

func init() {
	proto.RegisterType((*Team)(nil), "v1beta.Team")
	proto.RegisterType((*Group)(nil), "v1beta.Group")
	proto.RegisterType((*Round)(nil), "v1beta.Round")
	proto.RegisterType((*Tournament)(nil), "v1beta.Tournament")
	proto.RegisterMapType((map[string]*Group)(nil), "v1beta.Tournament.GroupsEntry")
	proto.RegisterType((*GetTournamentsRequest)(nil), "v1beta.GetTournamentsRequest")
	proto.RegisterType((*GetTournamentsResponse)(nil), "v1beta.GetTournamentsResponse")
	proto.RegisterType((*GetTournamentRequest)(nil), "v1beta.GetTournamentRequest")
	proto.RegisterType((*GetTournamentResponse)(nil), "v1beta.GetTournamentResponse")
	proto.RegisterType((*CreateTournamentRequest)(nil), "v1beta.CreateTournamentRequest")
	proto.RegisterType((*CreateTournamentResponse)(nil), "v1beta.CreateTournamentResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TournamentServiceClient is the client API for TournamentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TournamentServiceClient interface {
	// List returns all available Tournament
	List(ctx context.Context, in *GetTournamentsRequest, opts ...grpc.CallOption) (*GetTournamentsResponse, error)
	// Create creates a new tournament
	Create(ctx context.Context, in *CreateTournamentRequest, opts ...grpc.CallOption) (*CreateTournamentResponse, error)
	// Get return a tournament
	Get(ctx context.Context, in *GetTournamentRequest, opts ...grpc.CallOption) (*GetTournamentResponse, error)
}

type tournamentServiceClient struct {
	cc *grpc.ClientConn
}

func NewTournamentServiceClient(cc *grpc.ClientConn) TournamentServiceClient {
	return &tournamentServiceClient{cc}
}

func (c *tournamentServiceClient) List(ctx context.Context, in *GetTournamentsRequest, opts ...grpc.CallOption) (*GetTournamentsResponse, error) {
	out := new(GetTournamentsResponse)
	err := c.cc.Invoke(ctx, "/v1beta.TournamentService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tournamentServiceClient) Create(ctx context.Context, in *CreateTournamentRequest, opts ...grpc.CallOption) (*CreateTournamentResponse, error) {
	out := new(CreateTournamentResponse)
	err := c.cc.Invoke(ctx, "/v1beta.TournamentService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tournamentServiceClient) Get(ctx context.Context, in *GetTournamentRequest, opts ...grpc.CallOption) (*GetTournamentResponse, error) {
	out := new(GetTournamentResponse)
	err := c.cc.Invoke(ctx, "/v1beta.TournamentService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TournamentServiceServer is the server API for TournamentService service.
type TournamentServiceServer interface {
	// List returns all available Tournament
	List(context.Context, *GetTournamentsRequest) (*GetTournamentsResponse, error)
	// Create creates a new tournament
	Create(context.Context, *CreateTournamentRequest) (*CreateTournamentResponse, error)
	// Get return a tournament
	Get(context.Context, *GetTournamentRequest) (*GetTournamentResponse, error)
}

func RegisterTournamentServiceServer(s *grpc.Server, srv TournamentServiceServer) {
	s.RegisterService(&_TournamentService_serviceDesc, srv)
}

func _TournamentService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTournamentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TournamentServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1beta.TournamentService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TournamentServiceServer).List(ctx, req.(*GetTournamentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TournamentService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTournamentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TournamentServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1beta.TournamentService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TournamentServiceServer).Create(ctx, req.(*CreateTournamentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TournamentService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTournamentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TournamentServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1beta.TournamentService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TournamentServiceServer).Get(ctx, req.(*GetTournamentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TournamentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1beta.TournamentService",
	HandlerType: (*TournamentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _TournamentService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _TournamentService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _TournamentService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tournament.proto",
}

func init() { proto.RegisterFile("tournament.proto", fileDescriptor_tournament_f8100330c878e787) }

var fileDescriptor_tournament_f8100330c878e787 = []byte{
	// 482 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdd, 0x6a, 0x13, 0x41,
	0x14, 0x66, 0x7f, 0xc1, 0x53, 0x85, 0x7a, 0x6c, 0xed, 0xb2, 0xa6, 0x71, 0x19, 0x15, 0x4a, 0x2f,
	0xb2, 0x18, 0x45, 0xa4, 0xe0, 0x95, 0x48, 0x04, 0xa5, 0x17, 0x6b, 0x5e, 0x60, 0x93, 0x9e, 0x86,
	0xa5, 0xcd, 0x4e, 0x9c, 0x99, 0x0d, 0x94, 0xe2, 0x8d, 0xaf, 0xe0, 0x53, 0x09, 0xde, 0xf9, 0x0a,
	0x3e, 0x88, 0xec, 0xec, 0x64, 0x37, 0x4d, 0x26, 0x20, 0xde, 0x4d, 0xf8, 0xce, 0xf7, 0x77, 0xce,
	0x12, 0xd8, 0x57, 0xbc, 0x12, 0x65, 0x3e, 0xa7, 0x52, 0x0d, 0x16, 0x82, 0x2b, 0x8e, 0xe1, 0xf2,
	0xe5, 0x84, 0x54, 0x1e, 0xf7, 0x66, 0x9c, 0xcf, 0xae, 0x29, 0xcd, 0x17, 0x45, 0x9a, 0x97, 0x25,
	0x57, 0xb9, 0x2a, 0x78, 0x29, 0x9b, 0x29, 0x16, 0x83, 0x3f, 0xa6, 0x7c, 0x8e, 0x08, 0x7e, 0xcd,
	0x8e, 0x9c, 0xc4, 0x39, 0xb9, 0x97, 0xe9, 0x37, 0x7b, 0x07, 0xc1, 0x48, 0xf0, 0x6a, 0x61, 0x03,
	0x31, 0x01, 0x5f, 0x51, 0x3e, 0x8f, 0xbc, 0xc4, 0x3b, 0xd9, 0x1b, 0xde, 0x1f, 0x34, 0x6e, 0x83,
	0x5a, 0x2c, 0xd3, 0x08, 0xbb, 0x85, 0x20, 0xe3, 0x55, 0x79, 0x61, 0xa5, 0x33, 0x08, 0x2e, 0x0b,
	0x21, 0x55, 0xe4, 0x26, 0xce, 0x16, 0xbf, 0x81, 0xf0, 0x39, 0x84, 0x92, 0xa6, 0xbc, 0xbc, 0x88,
	0x3c, 0xcb, 0x90, 0xc1, 0xf0, 0x00, 0x02, 0x39, 0xe5, 0x82, 0x22, 0x5f, 0xcb, 0x37, 0x3f, 0xd8,
	0x4f, 0x07, 0x60, 0xdc, 0xae, 0xc4, 0x1a, 0xe1, 0x0d, 0x84, 0xb3, 0xba, 0x9e, 0x8c, 0x5c, 0xdd,
	0xa1, 0xdf, 0xca, 0x77, 0xab, 0xd4, 0xfd, 0xe5, 0x87, 0x52, 0x89, 0x9b, 0xcc, 0x4c, 0xe3, 0x0b,
	0x08, 0x45, 0xdd, 0x4b, 0x9a, 0xee, 0x0f, 0x56, 0x3c, 0xdd, 0x36, 0x33, 0x60, 0xfc, 0x11, 0xf6,
	0xd6, 0xd8, 0xb8, 0x0f, 0xde, 0x15, 0xdd, 0x98, 0x00, 0xf5, 0x13, 0x9f, 0x41, 0xb0, 0xcc, 0xaf,
	0x2b, 0x32, 0x2b, 0x68, 0x65, 0x34, 0x2b, 0x6b, 0xb0, 0x33, 0xf7, 0xad, 0xc3, 0x8e, 0xe0, 0x70,
	0x44, 0xaa, 0x4b, 0x25, 0x33, 0xfa, 0x5a, 0x91, 0x54, 0xec, 0x1c, 0x1e, 0x6f, 0x02, 0x72, 0xc1,
	0x4b, 0x49, 0xf8, 0x1a, 0xf6, 0xba, 0x0f, 0x42, 0x46, 0x8e, 0x0e, 0x8a, 0xdb, 0x05, 0xb3, 0xf5,
	0x31, 0x76, 0x0a, 0x07, 0x77, 0xf4, 0x8c, 0x8f, 0xf5, 0xe3, 0xf8, 0xb4, 0x11, 0xaa, 0xb5, 0x1e,
	0x02, 0x74, 0x9a, 0x9a, 0x62, 0x77, 0x5e, 0x9b, 0x62, 0x63, 0x38, 0x7a, 0x2f, 0x28, 0x57, 0xf4,
	0x4f, 0xde, 0xf5, 0x05, 0xee, 0x5c, 0x6e, 0x63, 0x75, 0x06, 0x64, 0xe7, 0x10, 0x6d, 0xab, 0xfe,
	0x7f, 0xca, 0xe1, 0x2f, 0x17, 0x1e, 0x76, 0xd0, 0x17, 0x12, 0xcb, 0x62, 0x4a, 0x38, 0x01, 0xff,
	0x73, 0x21, 0x15, 0x1e, 0xb7, 0x21, 0x6c, 0xb7, 0x8a, 0xfb, 0xbb, 0xe0, 0x26, 0x10, 0x7b, 0xf2,
	0xfd, 0xf7, 0x9f, 0x1f, 0xee, 0x21, 0x3e, 0x4a, 0x9b, 0xb9, 0x74, 0xed, 0x30, 0x78, 0x05, 0x61,
	0xd3, 0x04, 0x9f, 0xae, 0x64, 0x76, 0xec, 0x2b, 0x4e, 0x76, 0x0f, 0x18, 0xa7, 0xbe, 0x76, 0x8a,
	0x98, 0xcd, 0xe9, 0xcc, 0x39, 0xc5, 0x4b, 0xf0, 0x46, 0xa4, 0xb0, 0x67, 0x0d, 0xbc, 0xb2, 0x39,
	0xde, 0x81, 0x1a, 0x0f, 0xa6, 0x3d, 0x7a, 0x18, 0x5b, 0x3c, 0xd2, 0xdb, 0xfa, 0xf1, 0x6d, 0x12,
	0xea, 0x7f, 0xa0, 0x57, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x10, 0xec, 0x79, 0xbb, 0x04,
	0x00, 0x00,
}
