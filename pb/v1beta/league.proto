// Copyright (C) 2016-2019 Nicolas Lamirault <nicolas.lamirault@gmail.com>

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

//     http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax="proto3";

package v1beta;

// for grpc-gateway
import "google/api/annotations.proto";

// League service

message Discipline {
  string id = 1;
  string title = 2;
}

message Level {
  string id = 1;
  string title = 2;
}

// League define a pelota league
message League {
  string name = 1;
  map<string, string> details = 2;
  repeated Level levels = 3;
  repeated Discipline disciplines = 4;
}

message GetLeaguesRequest {
  string name = 1;
}

message GetLeaguesResponse {
  repeated League leagues = 1;
}


message CreateLeagueResponse {
  int32 code = 1;
  League league = 2;
}

message CreateLeagueRequest {
  string name = 1;
  string website = 2;
}


message GetLeagueRequest {
  string name = 1;
}

message GetLeagueResponse {
  League league = 1;
}


// League service defines the public APIs for leagues.
service LeagueService {

  // List returns all available League
  rpc List(GetLeaguesRequest) returns (GetLeaguesResponse) {
    option (google.api.http) = {
      get: "/v1beta/leagues"
    };
  }

  // Create creates a new league
  rpc Create(CreateLeagueRequest) returns (CreateLeagueResponse) {
    option (google.api.http) = {
      post: "/v1beta/leagues"
      body: "*"
    };
  }

  // Get return a league
  rpc Get(GetLeagueRequest) returns (GetLeagueResponse) {
    option (google.api.http) = {
      get: "/v1ibeta/leagues/{name}"
    };
  }

}
